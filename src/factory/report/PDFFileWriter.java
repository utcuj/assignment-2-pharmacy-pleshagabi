package factory.report;

import com.itextpdf.io.font.FontConstants;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import MVC.model.MedicationModel;

import java.io.IOException;
import java.util.ArrayList;

/**
 * Created by plesha on 09-Apr-18.
 */
public class PDFFileWriter implements Report {
    @Override
    public void createReportFile(String username, ArrayList<MedicationModel> meds) throws IOException {

        String destination = "E:\\Pharmacy Report.pdf";

        //Initialize PDF writer
        PdfWriter writer = new PdfWriter(destination);

        //Initialize PDF document
        PdfDocument pdf = new PdfDocument(writer);

        // Initialize document
        Document document = new Document(pdf);

        // Create a PdfFont
        PdfFont font = PdfFontFactory.createFont(FontConstants.TIMES_ROMAN);
        // Add a Paragraph
        document.add(new Paragraph("Medicines OUT OF STOCK report generated by administrator: " + username).add(" \n").setFont(font));

        for( MedicationModel m : meds ) {
            if( m.getQuantity()== 0 ) {

                Paragraph p = new Paragraph("Medicine ID: " + m.getId() + "\n")
                        .add("Medicine name: " + m.getName() + "\n")
                        .add("Medicine ingredients: " + m.getIngredients() + "\n")
                        .add("Medicine manufacturer: " + m.getManufacturer() + "\n")
                        .add("Medicine quantity: " + m.getQuantity() + "\n")
                        .add("Medicine price: " + m.getPrice() + "\n")
                        .add("\n").add("\n");

                document.add(p);
            }
        }

        //Close document
        document.close();
    }
}
